{
    "patches": [
        {
            "label": "2025-10-27_23-39-21",
            "content": "@@ -481,2452 +481,4 @@\n rn 0\n-%0A    def getThickness(self) -%3E float:%0A        return self.__thickness%0A    def getHardness(self) -%3E str:%0A        return self.__hardness%0A    def getSize(self) -%3E int:%0A        return self.__size%0A    def setSize(self, size: int):%0A        self.__size = size%0A    def __str__(self):%0A        return f%22%7Bself.__thickness%7D:%7Bself.__hardness%7D:%7Bself.__size%7D%22%0A    class Pencil:%0A        def __init__(self,thickness: float):%0A            self.__thickness = thickness%0A            self.__tip: Lead %7C None = None%0A        def insert(self, lead: Lead) -%3E bool:%0A            if self.__tip is not None:%0A                print(%22fail: ja existe grafite%22)%0A                return False%0A            if lead.getThickness() != self.__thickness:%0A                print(%22fail: calibre incompativel%22)%0A                return False%0A            self.__tip = lead%0A            return True%0A        def remove(self) -%3E Lead %7C None:%0A            if self.__tip is None:%0A                print(%22fail: nao existe grafite%22)%0A                return None%0A            lead = self.__tip%0A            self.__tip = None%0A            return lead%0A        def writePage(self, sheets: int):%0A            if self.__tip is None:%0A                print(%22fail: nao existe grafite%22)%0A                return%0A            if self.__tip.getSize() %3C= 10:%0A                print(%22fail: tamanho insuficiente%22)%0A                return%0A            usage = self.__tip.usagePerSheet()%0A            if self.__tip.getSize() - usage %3C 10:%0A                gasto = self.__tip.getSize() - 10%0A                self.__tip.setSize(10)%0A                print(%22fail: folha incompleta%22)%0A            else:%0A                self.__tip.setSize(self.__tip.getSize() - usage)%0Adef __str__(self):%0A            tip_str = %22null%22 if self.__tip is None else str(self.__tip)%0A            return f%22Pencil: %7Bself.__thickness%7D, Tip: %7Btip_str%7D%22%0Adef main():%0A    pencil = Pencil(0.5)%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(pencil)%0A        elif args%5B0%5D == %22insert%22:%0A            thickness = float(args%5B1%5D)%0A            hardness = args%5B2%5D%0A            size = int(args%5B3%5D)%0A            lead = Lead(thickness, hardness, size)%0A            pencil.insert(lead)%0A        elif args%5B0%5D == %22remove%22:%0A            pencil.remove()%0A        elif args%5B0%5D == %22write%22:%0A            sheets = int(args%5B1%5D)%0A            pencil.writePage(sheets)\n",
            "lines": "16"
        },
        {
            "label": "2025-10-27_23-52-28",
            "content": "@@ -19,33 +19,32 @@\n f __init__(self,\n- \n thickness: float\n@@ -163,33 +163,32 @@\n f.__size = size%0A\n-%0A\n     def usagePer\n@@ -194,34 +194,36 @@\n rSheet(self) -%3E \n-in\n+floa\n t:%0A        if se\n@@ -481,57 +481,8 @@\n rn 0\n-  # Caso inv%C3%A1lido, mas assumindo durezas v%C3%A1lidas%0A\n %0A   \n@@ -543,25 +543,24 @@\n __thickness%0A\n-%0A\n     def getH\n@@ -612,17 +612,16 @@\n ardness%0A\n-%0A\n     def \n@@ -665,25 +665,24 @@\n self.__size%0A\n-%0A\n     def setS\n@@ -730,17 +730,16 @@\n  = size%0A\n-%0A\n     def \n@@ -770,17 +770,16 @@\n eturn f%22\n-%5B\n %7Bself.__\n@@ -824,13 +824,14 @@\n ize%7D\n-%5D\n %22%0A\n-%0A%0A\n+    \n clas\n@@ -840,24 +840,28 @@\n Pencil:%0A    \n+  \n+  \n def __init__\n@@ -866,17 +866,16 @@\n __(self,\n- \n thicknes\n@@ -885,32 +885,36 @@\n float):%0A        \n+  \n+  \n self.__thickness\n@@ -926,32 +926,36 @@\n ickness%0A        \n+   \n+ \n self.__tip: Lead\n@@ -965,25 +965,28 @@\n None = None%0A\n-%0A\n+    \n     def inse\n@@ -1015,16 +1015,20 @@\n %3E bool:%0A\n+    \n         \n@@ -1058,32 +1058,36 @@\n ne:%0A            \n+    \n print(%22fail: ja \n@@ -1107,32 +1107,36 @@\n e%22)%0A            \n+    \n return False%0A   \n@@ -1140,16 +1140,20 @@\n         \n+  \n+  \n if lead.\n@@ -1192,32 +1192,36 @@\n ss:%0A            \n+    \n print(%22fail: cal\n@@ -1240,16 +1240,20 @@\n tivel%22)%0A\n+    \n         \n@@ -1269,32 +1269,36 @@\n n False%0A        \n+    \n self.__tip = lea\n@@ -1303,24 +1303,28 @@\n ead%0A        \n+    \n return True%0A\n@@ -1323,17 +1323,20 @@\n rn True%0A\n-%0A\n+    \n     def \n@@ -1364,32 +1364,36 @@\n %7C None:%0A        \n+    \n if self.__tip is\n@@ -1403,32 +1403,36 @@\n ne:%0A            \n+   \n+ \n print(%22fail: nao\n@@ -1457,24 +1457,28 @@\n             \n+    \n return None%0A\n@@ -1485,22 +1485,23 @@\n         \n+    \n-remove\n+lea\n d = self\n@@ -1507,32 +1507,36 @@\n f.__tip%0A        \n+   \n+ \n self.__tip = Non\n@@ -1549,24 +1549,28 @@\n     \n+    \n return \n-removed%0A%0A\n+lead%0A    \n     \n@@ -1583,27 +1583,44 @@\n itePage(self\n-):%0A\n+, sheets: int):%0A    \n         if s\n@@ -1630,32 +1630,36 @@\n .__tip is None:%0A\n+    \n             prin\n@@ -1692,39 +1692,47 @@\n e%22)%0A            \n+ \n+   \n return%0A\n+    \n         if self.\n@@ -1758,32 +1758,36 @@\n 10:%0A            \n+   \n+ \n print(%22fail: tam\n@@ -1802,24 +1802,28 @@\n uficiente%22)%0A\n+    \n             \n@@ -1837,16 +1837,20 @@\n         \n+    \n usage = \n@@ -1876,32 +1876,36 @@\n Sheet()%0A        \n+ \n+   \n if self.__tip.ge\n@@ -1934,56 +1934,8 @@\n     \n-        # Gasta o suficiente para chegar a 10mm%0A\n     \n@@ -1980,32 +1980,36 @@\n  10%0A            \n+    \n self.__tip.setSi\n@@ -2019,32 +2019,36 @@\n 10)%0A            \n+   \n+ \n print(%22fail: fol\n@@ -2063,38 +2063,46 @@\n pleta%22)%0A        \n+    \n else:%0A\n+    \n             self\n@@ -2146,21 +2146,16 @@\n  usage)%0A\n-%0A    \n def __st\n@@ -2157,32 +2157,36 @@\n  __str__(self):%0A\n+    \n         tip_str \n@@ -2237,32 +2237,36 @@\n .__tip)%0A        \n+    \n return f%22calibre\n@@ -2258,23 +2258,22 @@\n eturn f%22\n-calibre\n+Pencil\n : %7Bself.\n@@ -2286,23 +2286,19 @@\n kness%7D, \n-grafite\n+Tip\n : %7Btip_s\n@@ -2302,18 +2302,16 @@\n p_str%7D%22%0A\n-%0A%0A\n def main\n@@ -2327,21 +2327,27 @@\n encil = \n-None%0A\n+Pencil(0.5)\n %0A    whi\n@@ -2512,164 +2512,15 @@\n == %22\n-init%22:%0A            thickness = float(args%5B1%5D)%0A            pencil = Pencil(thickness)%0A        elif args%5B0%5D == %22show%22:%0A            if pencil is not None:%0A    \n+show%22:%0A\n     \n@@ -2579,47 +2579,8 @@\n t%22:%0A\n-            if pencil is not None:%0A    \n     \n@@ -2626,20 +2626,16 @@\n         \n- \n-   \n hardness\n@@ -2645,20 +2645,16 @@\n args%5B2%5D%0A\n-    \n         \n@@ -2685,28 +2685,24 @@\n             \n-   \n- \n lead = Lead(\n@@ -2740,20 +2740,16 @@\n         \n-    \n pencil.i\n@@ -2764,13 +2764,169 @@\n ad)%0A\n-%0A%0A%0Amain(\n+        elif args%5B0%5D == %22remove%22:%0A            pencil.remove()%0A        elif args%5B0%5D == %22write%22:%0A            sheets = int(args%5B1%5D)%0A            pencil.writePage(sheets\n )\n",
            "lines": "85"
        },
        {
            "label": "2025-10-27_23-54-01",
            "content": "@@ -2935,15 +2935,14 @@\n ead)%0A%0A%0A%0A\n-%0A\n main()\n",
            "lines": "105"
        },
        {
            "label": "2025-10-27_23-54-24",
            "content": "@@ -2936,117 +2936,9 @@\n ad)%0A\n-      %0A        elif args%5B0%5D == %22write%22:%0A            if pencil is not None:%0A                pencil.writePage()\n+%0A\n %0A%0A%0Am\n",
            "lines": "106"
        },
        {
            "label": "2025-10-27_23-54-34",
            "content": "@@ -2942,119 +2942,9 @@\n     \n-      elif args%5B0%5D == %22remove%22:%0A                if pencil is not None:%0A                    pencil.remove()%0A    \n+%0A\n     \n@@ -2976,36 +2976,32 @@\n e%22:%0A            \n- \n-   \n if pencil is not\n@@ -2999,36 +2999,32 @@\n il is not None:%0A\n-    \n                 \n",
            "lines": "108"
        },
        {
            "label": "2025-10-27_23-55-16",
            "content": "@@ -1,21 +1,18 @@\n class \n-Grafite\n+Lead\n :%0A    de\n@@ -32,148 +32,151 @@\n lf, \n-calibre: float, dureza: str, tamanho: int):%0A        self.__calibre = calibre%0A        self.__dureza = dureza%0A        self.__tamanho = tamanho\n+thickness: float, hardness: str, size: int):%0A        self.__thickness = thickness%0A        self.__hardness = hardness%0A        self.__size = size\n %0A%0A  \n@@ -183,25 +183,27 @@\n   def us\n-oPorFolha\n+agePerSheet\n (self) -\n@@ -223,30 +223,32 @@\n   if self.__\n-dureza\n+hardness\n  == %22HB%22:%0A  \n@@ -282,30 +282,32 @@\n elif self.__\n-dureza\n+hardness\n  == %222B%22:%0A  \n@@ -341,30 +341,32 @@\n elif self.__\n-dureza\n+hardness\n  == %224B%22:%0A  \n@@ -404,22 +404,24 @@\n  self.__\n-dureza\n+hardness\n  == %226B%22\n@@ -489,17 +489,17 @@\n Caso inv\n-%EC%B9%98\n+%C3%A1\n lido, ma\n@@ -519,17 +519,17 @@\n urezas v\n-%EC%B9%98\n+%C3%A1\n lidas%0A%0A \n@@ -538,23 +538,25 @@\n  def get\n-Calibre\n+Thickness\n (self) -\n@@ -586,23 +586,25 @@\n  self.__\n-calibre\n+thickness\n %0A%0A    de\n@@ -612,14 +612,16 @@\n  get\n-Dureza\n+Hardness\n (sel\n@@ -653,22 +653,24 @@\n  self.__\n-dureza\n+hardness\n %0A%0A    de\n@@ -674,23 +674,20 @@\n  def get\n-Tamanho\n+Size\n (self) -\n@@ -715,23 +715,20 @@\n  self.__\n-tamanho\n+size\n %0A%0A    de\n@@ -736,29 +736,23 @@\n  set\n-Tamanho(self, tamanho\n+Size(self, size\n : in\n@@ -774,25 +774,19 @@\n f.__\n-tamanho = tamanho\n+size = size\n %0A%0A  \n@@ -832,23 +832,25 @@\n %7Bself.__\n-calibre\n+thickness\n %7D:%7Bself.\n@@ -851,22 +851,24 @@\n %7Bself.__\n-dureza\n+hardness\n %7D:%7Bself.\n@@ -869,23 +869,20 @@\n %7Bself.__\n-tamanho\n+size\n %7D%5D%22%0A%0A%0Acl\n@@ -885,25 +885,22 @@\n %0A%0Aclass \n-Lapiseira\n+Pencil\n :%0A    de\n@@ -916,23 +916,25 @@\n _(self, \n-calibre\n+thickness\n : float)\n@@ -954,25 +954,29 @@\n f.__\n-calibre = calibre\n+thickness = thickness\n %0A   \n@@ -991,22 +991,17 @@\n f.__\n-ponta: Grafite\n+tip: Lead\n  %7C N\n@@ -1029,33 +1029,26 @@\n nser\n-ir\n+t\n (self, \n-grafite: Grafite\n+lead: Lead\n ) -%3E\n@@ -1068,29 +1068,27 @@\n   if self.__\n-ponta\n+tip\n  is not None\n@@ -1174,26 +1174,25 @@\n  if \n-grafite.getCalibre\n+lead.getThickness\n () !\n@@ -1200,23 +1200,25 @@\n  self.__\n-calibre\n+thickness\n :%0A      \n@@ -1303,23 +1303,18 @@\n f.__\n-ponta = grafite\n+tip = lead\n %0A   \n@@ -1345,17 +1345,16 @@\n f remove\n-r\n (self) -\n@@ -1355,23 +1355,20 @@\n elf) -%3E \n-Grafite\n+Lead\n  %7C None:\n@@ -1378,37 +1378,35 @@\n       if self.__\n-ponta\n+tip\n  is None:%0A      \n@@ -1482,19 +1482,18 @@\n    remov\n-ido\n+ed\n  = self.\n@@ -1494,21 +1494,19 @@\n  self.__\n-ponta\n+tip\n %0A       \n@@ -1517,161 +1517,18 @@\n f.__\n-ponta = None  # Esta linha deve estar presente e corretamente indentada%0A        print(%22DEBUG: Grafite removido%22)  # Debug tempor%EC%B9%98rio - remova ap%EC%B9%A9s testar\n+tip = None\n %0A   \n@@ -1544,19 +1544,18 @@\n rn remov\n-ido\n+ed\n %0A%0A    de\n@@ -1556,24 +1556,25 @@\n     def \n-escrever\n+writePage\n (self):%0A\n@@ -1583,37 +1583,35 @@\n       if self.__\n-ponta\n+tip\n  is None:%0A      \n@@ -1687,32 +1687,27 @@\n  self.__\n-ponta.getTamanho\n+tip.getSize\n () %3C= 10\n@@ -1785,17 +1785,19 @@\n       us\n-o\n+age\n  = self.\n@@ -1802,25 +1802,25 @@\n f.__\n-ponta.usoPorFolha\n+tip.usagePerSheet\n ()%0A \n@@ -1840,32 +1840,29 @@\n f.__\n-ponta.getTamanho\n+tip.getSize\n () - us\n-o\n+age\n  %3C 1\n@@ -1943,32 +1943,27 @@\n  self.__\n-ponta.getTamanho\n+tip.getSize\n () - 10%0A\n@@ -1981,32 +1981,27 @@\n  self.__\n-ponta.setTamanho\n+tip.setSize\n (10)%0A   \n@@ -2078,56 +2078,48 @@\n f.__\n-ponta.setTamanho(self.__ponta.getTamanho\n+tip.setSize(self.__tip.getSize\n () - us\n-o\n+age\n )%0A%0A \n@@ -2148,21 +2148,19 @@\n         \n-ponta\n+tip\n _str = %22\n@@ -2175,21 +2175,19 @@\n  self.__\n-ponta\n+tip\n  is None\n@@ -2203,21 +2203,19 @@\n (self.__\n-ponta\n+tip\n )%0A      \n@@ -2242,23 +2242,25 @@\n %7Bself.__\n-calibre\n+thickness\n %7D, grafi\n@@ -2268,13 +2268,11 @@\n e: %7B\n-ponta\n+tip\n _str\n@@ -2292,25 +2292,22 @@\n ():%0A    \n-lapiseira\n+pencil\n  = None%0A\n@@ -2334,18 +2334,17 @@\n      lin\n-ha\n+e\n  = input\n@@ -2369,18 +2369,17 @@\n $%22 + lin\n-ha\n+e\n )%0A      \n@@ -2390,18 +2390,17 @@\n gs = lin\n-ha\n+e\n .split(%22\n@@ -2487,39 +2487,41 @@\n t%22:%0A            \n-calibre\n+thickness\n  = float(args%5B1%5D\n@@ -2538,37 +2538,33 @@\n     \n-lapiseira = Lapiseira(calibre\n+pencil = Pencil(thickness\n )%0A  \n@@ -2604,33 +2604,30 @@\n          if \n-lapiseira\n+pencil\n  is not None\n@@ -2650,25 +2650,22 @@\n   print(\n-lapiseira\n+pencil\n )%0A      \n@@ -2703,33 +2703,30 @@\n          if \n-lapiseira\n+pencil\n  is not None\n@@ -2743,23 +2743,25 @@\n         \n-calibre\n+thickness\n  = float\n@@ -2786,22 +2786,24 @@\n         \n-dureza\n+hardness\n  = args%5B\n@@ -2821,23 +2821,20 @@\n         \n-tamanho\n+size\n  = int(a\n@@ -2861,95 +2861,87 @@\n     \n-grafite = Grafite(calibre, dureza, tamanho)%0A                lapiseira.inserir(grafite)%0A\n+lead = Lead(thickness, hardness, size)%0A                pencil.insert(lead)%0A    \n     \n@@ -2978,36 +2978,37 @@\n             \n-if lapiseira\n+    if pencil\n  is not None\n@@ -3029,28 +3029,32 @@\n     \n+    \n-lapiseira\n+pencil\n .remove\n-r\n ()%0A\n+    \n     \n@@ -3098,20 +3098,21 @@\n     \n-if lapiseira\n+    if pencil\n  is \n@@ -3141,26 +3141,28 @@\n     \n-lapiseira.escrever\n+    pencil.writePage\n ()%0A%0A\n@@ -3168,9 +3168,8 @@\n %0A%0Amain()\n-%0A\n",
            "lines": "110"
        },
        {
            "label": "2025-10-27_23-56-49",
            "content": "@@ -469,16 +469,62 @@\n turn 0  \n+# Caso inv%EC%B9%98lido, mas assumindo durezas v%EC%B9%98lidas\n %0A%0A    de\n@@ -1549,16 +1549,156 @@\n  = None \n+ # Esta linha deve estar presente e corretamente indentada%0A        print(%22DEBUG: Grafite removido%22)  # Debug tempor%EC%B9%98rio - remova ap%EC%B9%A9s testar\n %0A       \n@@ -2034,24 +2034,76 @@\n - uso %3C 10:%0A\n+            # Gasta o suficiente para chegar a 10mm%0A\n             \n",
            "lines": "111"
        },
        {
            "label": "2025-10-27_23-58-53",
            "content": "class Grafite:\n    def __init__(self, calibre: float, dureza: str, tamanho: int):\n        self.__calibre = calibre\n        self.__dureza = dureza\n        self.__tamanho = tamanho\n\n    def usoPorFolha(self) -> int:\n        if self.__dureza == \"HB\":\n            return 1\n        elif self.__dureza == \"2B\":\n            return 2\n        elif self.__dureza == \"4B\":\n            return 4\n        elif self.__dureza == \"6B\":\n            return 6\n        else:\n            return 0  \n\n    def getCalibre(self) -> float:\n        return self.__calibre\n\n    def getDureza(self) -> str:\n        return self.__dureza\n\n    def getTamanho(self) -> int:\n        return self.__tamanho\n\n    def setTamanho(self, tamanho: int):\n        self.__tamanho = tamanho\n\n    def __str__(self):\n        return f\"[{self.__calibre}:{self.__dureza}:{self.__tamanho}]\"\n\n\nclass Lapiseira:\n    def __init__(self, calibre: float):\n        self.__calibre = calibre\n        self.__ponta: Grafite | None = None\n\n    def inserir(self, grafite: Grafite) -> bool:\n        if self.__ponta is not None:\n            print(\"fail: ja existe grafite\")\n            return False\n        if grafite.getCalibre() != self.__calibre:\n            print(\"fail: calibre incompativel\")\n            return False\n        self.__ponta = grafite\n        return True\n\n    def remover(self) -> Grafite | None:\n        if self.__ponta is None:\n            print(\"fail: nao existe grafite\")\n            return None\n        removido = self.__ponta\n        self.__ponta = None \n        return removido\n\n    def escrever(self):\n        if self.__ponta is None:\n            print(\"fail: nao existe grafite\")\n            return\n        if self.__ponta.getTamanho() <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n        uso = self.__ponta.usoPorFolha()\n        if self.__ponta.getTamanho() - uso < 10:\n            gasto = self.__ponta.getTamanho() - 10\n            self.__ponta.setTamanho(10)\n            print(\"fail: folha incompleta\")\n        else:\n            self.__ponta.setTamanho(self.__ponta.getTamanho() - uso)\n\n    def __str__(self):\n        ponta_str = \"null\" if self.__ponta is None else str(self.__ponta)\n        return f\"calibre: {self.__calibre}, grafite: {ponta_str}\"\n\n\ndef main():\n    lapiseira = None\n\n    while True:\n        linha = input()\n        print(\"$\" + linha)\n        args = linha.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            lapiseira = Lapiseira(calibre)\n        elif args[0] == \"show\":\n            if lapiseira is not None:\n                print(lapiseira)\n        elif args[0] == \"insert\":\n            if lapiseira is not None:\n                calibre = float(args[1])\n                dureza = args[2]\n                tamanho = int(args[3])\n                grafite = Grafite(calibre, dureza, tamanho)\n                lapiseira.inserir(grafite)\n        elif args[0] == \"remove\":\n            if lapiseira is not None:\n                lapiseira.remover()\n        elif args[0] == \"write\":\n            if lapiseira is not None:\n                lapiseira.escrever()\n\n\nmain()\n",
            "lines": "109"
        }
    ]
}