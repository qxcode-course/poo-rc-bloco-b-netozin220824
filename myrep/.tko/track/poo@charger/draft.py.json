{
    "patches": [
        {
            "label": "2025-10-28_03-27-37",
            "content": "@@ -3433,403 +3433,4 @@\n ido%0A\n-def main():%0A    notebook = Notebook()%0A    bateria = Baterria(100)%0A    carregador = Carregador(10)%0A%0A    notebook.mostrar()%0A    notebook.ligar()%0A%0A    notebook.setBateria(bateria)%0A    notebook.setCarregador(carregador)%0A%0A    notebook.mostrar()%0A    notebook.ligar()%0A%0A    notebook.usar(5)%0A    notebook.mostrar()%0A%0A    notebook.usar(10)%0A    notebook.mostrar()%0A%0A    notebook.desligar()%0A    notebook.mostrar()\n",
            "lines": "85"
        },
        {
            "label": "2025-10-28_03-27-53",
            "content": "@@ -3429,8 +3429,407 @@\n emovido%0A\n+def main():%0A    notebook = Notebook()%0A    bateria = Baterria(100)%0A    carregador = Carregador(10)%0A%0A    notebook.mostrar()%0A    notebook.ligar()%0A%0A    notebook.setBateria(bateria)%0A    notebook.setCarregador(carregador)%0A%0A    notebook.mostrar()%0A    notebook.ligar()%0A%0A    notebook.usar(5)%0A    notebook.mostrar()%0A%0A    notebook.usar(10)%0A    notebook.mostrar()%0A%0A    notebook.desligar()%0A    notebook.mostrar()\n",
            "lines": "107"
        },
        {
            "label": "2025-10-28_03-29-30",
            "content": "@@ -4,16 +4,17 @@\n ss Bater\n+r\n ia:%0A    \n@@ -27,25 +27,24 @@\n init__(self,\n- \n capacidade: \n@@ -74,21 +74,16 @@\n pacidade\n-: int\n  = capac\n@@ -108,21 +108,16 @@\n .__carga\n-: int\n  = capac\n@@ -114,33 +114,32 @@\n ga = capacidade%0A\n-%0A\n     def getCapac\n@@ -191,17 +191,16 @@\n acidade%0A\n-%0A\n     def \n@@ -250,17 +250,16 @@\n __carga%0A\n-%0A\n     def \n@@ -272,17 +272,16 @@\n ga(self,\n- \n carga: i\n@@ -312,46 +312,13 @@\n a = \n-max(0, min(carga, self.__capacidade))%0A\n+carga\n %0A   \n@@ -318,37 +318,44 @@\n rga%0A    def \n-__str__\n+mostrar\n (self)\n+ -%3E str\n :%0A        re\n@@ -344,39 +344,38 @@\n -%3E str:%0A        \n-return \n+print(\n f%22%7Bself.__carga%7D\n@@ -395,17 +395,17 @@\n cidade%7D%22\n-%0A\n+)\n %0Aclass C\n@@ -433,25 +433,24 @@\n init__(self,\n- \n potencia: in\n@@ -476,21 +476,16 @@\n potencia\n-: int\n  = poten\n@@ -480,33 +480,32 @@\n ncia = potencia%0A\n-%0A\n     def getPoten\n@@ -553,25 +553,24 @@\n otencia%0A\n-%0A\n     def \n __str__(\n@@ -565,21 +565,28 @@\n def \n-__str__\n+mostrar\n (self)\n+ -%3E str\n :%0A  \n@@ -595,17 +595,26 @@\n     \n-return f%22\n+print(f%22potencia: \n %7Bsel\n@@ -628,17 +628,17 @@\n encia%7DW%22\n-%0A\n+)\n %0Aclass N\n@@ -710,42 +710,8 @@\n lse%0A\n-        self.__tempo_uso: int = 0%0A\n     \n@@ -735,16 +735,17 @@\n a: Bater\n+r\n ia %7C Non\n@@ -805,25 +805,24 @@\n  = None%0A\n-%0A\n     def \n turn_on(\n@@ -813,23 +813,21 @@\n     def \n-turn_on\n+ligar\n (self):%0A\n@@ -844,32 +844,77 @@\n  self.__ligado:%0A\n+            print(%22notebook ja esta ligado%22)%0A\n             retu\n@@ -982,17 +982,16 @@\n rga() %3C=\n- \n 0) and s\n@@ -1035,22 +1035,16 @@\n  print(%22\n-fail: \n n%C3%A3o foi \n@@ -1057,16 +1057,17 @@\n el ligar\n+ \n %22)%0A     \n@@ -1109,16 +1109,48 @@\n  = True%0A\n+        print(%22notebook ligado%22)\n %0A    def\n@@ -1150,24 +1150,24 @@\n     def \n-turn_off\n+desligar\n (self):%0A\n@@ -1212,141 +1212,769 @@\n     \n-return%0A        self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desli\n+print(%22notebook ja esta desligado%22)%0A            return%0A        self.__ligado = False%0A        print(%22notebook desligado%22)%0A    def mostrar(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        bateria_str = %22nenhuma%22 if self.__bateria is None else f%22%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D%22%0A        carregador_str = %22nenhum%22 if self.__carregador is None else f%22%7Bself.__carregador.getPotencia()%7DW%22%0A        print(f%22status: %7Bstatus%7D, bateria: %7Bbateria_str%7D, carregador: %7Bcarregador_str%7D%22)%0A    def usar(self,tempo: int):%0A        if not self.__ligado:%0A            print(%22notebook desligado%22)%0A            return%0A        if self.__bateria is None and self.__carregador is None:%0A            print(%22erro: sem bateria ou carre\n gado\n+r\n %22)%0A \n@@ -2068,38 +2068,8 @@\n ne:%0A\n-            # Carrega bateria%0A\n     \n@@ -2138,32 +2138,45 @@\n ia()%0A           \n+ nova_carga =\n  self.__bateria.\n@@ -2175,25 +2175,25 @@\n bateria.\n-s\n+g\n etCarga(\n self.__b\n@@ -2180,24 +2180,57 @@\n ia.getCarga(\n+) + carga_adicionada%0A            \n self.__bater\n@@ -2228,33 +2228,33 @@\n f.__bateria.\n-g\n+s\n etCarga(\n ) + carga_ad\n@@ -2241,36 +2241,79 @@\n etCarga(\n-) + carga_adicionada\n+nova_carga)%0A            print(%22Notebook utilizado com sucesso.%22\n )%0A      \n@@ -2351,34 +2351,8 @@\n ne:%0A\n-            # Usa bateria%0A\n     \n@@ -2403,139 +2403,8 @@\n a()%0A\n-            if carga_atual %3C= 0:%0A                print(%22fail: descarregou%22)%0A                self.turn_off()%0A                return%0A\n     \n@@ -2571,21 +2571,24 @@\n  print(%22\n-fail:\n+notebook\n  descarr\n@@ -2619,582 +2619,85 @@\n elf.\n-turn_off()%0A                return%0A        # S%C3%B3 carregador ou bateria carregada: apenas acumula tempo%0A        self.__tempo_uso += tempo%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if self.__carregador is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        removido = self.__carregador%0A        self.__carregador = None%0A        print(f%22Removido %7Bremovido%7D\n+desligar()%0A        else:%0A            print(%22Notebook utilizado com sucesso\n %22)%0A\n-%0A\n     \n@@ -2707,38 +2707,38 @@\n  set\n-_b\n+B\n at\n-t\n er\n-y\n+ia\n (self,\n- capacidade: int\n+bateria: Baterria\n ):%0A \n@@ -2765,28 +2765,15 @@\n a = \n-B\n+b\n ateria\n-(capacidade)%0A\n %0A   \n@@ -2783,22 +2783,40 @@\n f rm\n-_b\n+B\n at\n-t\n er\n-y\n+ia\n (self)\n+ -%3E Baterria %7C None\n :%0A  \n@@ -2871,25 +2871,36 @@\n nt(%22\n-fail: Sem bateria\n+nenhuma bateria para remover\n %22)%0A \n@@ -2908,32 +2908,37 @@\n           return\n+ None\n %0A        removid\n@@ -2937,17 +2937,17 @@\n  removid\n-o\n+a\n  = self.\n@@ -3004,269 +3004,103 @@\n int(\n-f%22Removido %7B\n+%22bateria \n removid\n-o%7D\n+a\n %22)%0A\n-%0A\n     \n-def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        if self.__ligado:%0A            partes = %5Bf%22Notebook: %7Bstatus%7D por %7Bself.__tempo_uso%7D min%22%5D%0A        else:%0A            partes = %5Bf%22Notebook: %7Bstatus%7D%22%5D\n+    return removida%0A    def setCarregador(self,carregador: Carregador):\n %0A   \n@@ -3100,27 +3100,24 @@\n r):%0A        \n-if \n self.__carre\n@@ -3126,49 +3126,31 @@\n dor \n-is not None:%0A            partes.append(f%22\n+= carregador%0A    def rm\n Carr\n@@ -3159,18 +3159,19 @@\n ador\n- %7B\n+(\n self\n-.__c\n+) -%3E C\n arre\n@@ -3179,730 +3179,167 @@\n ador\n-%7D%22)%0A        if self.__bateria is not None:%0A            partes.append(f%22Bateria %7Bself.__bateria%7D%22)%0A        print(%22, %22.join(partes))%0A%0Adef main():%0A    notebook = Notebook()%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            notebook.show()%0A        elif args%5B0%5D == %22turn_on%22:%0A            notebook.turn_on()%0A        elif args%5B0%5D == %22turn_off%22:%0A            notebook.turn_off()%0A        elif args%5B0%5D == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.use(tempo)%0A        elif args%5B0%5D == %22set\n+ %7C None:%0A        if self.__carregador is None:%0A            print(%22nenhum carregador para remover%22)%0A            return None%0A        removido = self._\n _c\n-h\n ar\n-ger%22:%0A            potencia = int(args%5B1%5D)%0A            notebook.set_charger(potencia)\n+regador\n %0A   \n@@ -3347,270 +3347,90 @@\n     \n+s\n el\n-if args%5B0%5D == %22rm\n+f._\n _c\n-h\n ar\n-ger%22:%0A            notebook.rm_charger()%0A        elif args%5B0%5D == %22set_battery%22:%0A            capacidade = int(args%5B1%5D)%0A            notebook.set_battery(capacidade)%0A        elif args%5B0%5D == %22rm_battery%22:%0A            notebook.rm_battery()%0A%0Amain()\n+regador = None%0A        print(%22carregador removido%22)%0A        return removido\n %0A\n",
            "lines": "85"
        },
        {
            "label": "2025-10-28_04-00-29",
            "content": "@@ -1426,32 +1426,62 @@\n or is not None:%0A\n+            # Carrega bateria%0A\n             carg\n@@ -2106,32 +2106,99 @@\n          return%0A\n+        # S%C3%B3 carregador ou bateria carregada: apenas acumula tempo%0A\n         self.__t\n@@ -2657,275 +2657,52 @@\n %7D%22)%0A\n-        if self.__ligado and (self.__bateria is None or self.__bateria.getCarga() %3C= 0):%0A            self.turn_off()%0A%0A    def set_battery(self, capacidade: int):%0A        if self.__bateria is not None:%0A            print(%22fail: bateria j%C3%A1 instalada%22)%0A            return\n+%0A    def set_battery(self, capacidade: int):\n %0A   \n@@ -2968,92 +2968,8 @@\n o%7D%22)\n-%0A        if self.__ligado and self.__carregador is None:%0A            self.turn_off()\n %0A%0A  \n",
            "lines": "139"
        },
        {
            "label": "2025-10-28_04-03-57",
            "content": "@@ -1329,32 +1329,30 @@\n t(%22fail: des\n-carregou\n+ligado\n %22)%0A         \n@@ -1438,38 +1438,8 @@\n ne:%0A\n-            # Carrega bateria%0A\n     \n@@ -1954,215 +1954,8 @@\n do)%0A\n-            # Verifica se a bateria descarregou completamente%0A            if self.__bateria.getCarga() == 0:%0A                print(%22fail: descarregou%22)%0A                self.turn_off()%0A                return%0A\n     \n@@ -2088,75 +2088,8 @@\n urn%0A\n-        # S%C3%B3 carregador ou bateria carregada: apenas acumula tempo%0A\n     \n@@ -2560,86 +2560,8 @@\n %7D%22)%0A\n-        # Verifica se o notebook deve ser desligado ap%C3%B3s remover o carregador%0A\n     \n@@ -3095,83 +3095,8 @@\n %7D%22)%0A\n-        # Verifica se o notebook deve ser desligado ap%C3%B3s remover a bateria%0A\n     \n@@ -4506,12 +4506,11 @@\n ()%0A%0A\n+\n main()%0A\n-%0A\n",
            "lines": "144"
        },
        {
            "label": "2025-10-28_04-08-02",
            "content": "@@ -1325,38 +1325,40 @@\n print(%22fail: des\n-ligado\n+carregou\n %22)%0A            r\n@@ -1428,32 +1428,62 @@\n or is not None:%0A\n+            # Carrega bateria%0A\n             carg\n@@ -1652,32 +1652,58 @@\n ia is not None:%0A\n+            # Usa bateria%0A\n             carg\n@@ -1795,38 +1795,40 @@\n print(%22fail: des\n-ligado\n+carregou\n %22)%0A             \n@@ -1982,16 +1982,78 @@\n _usado)%0A\n+            # Verifica se a bateria descarregou completamente%0A\n         \n@@ -2123,22 +2123,24 @@\n ail: des\n-ligado\n+carregou\n %22)%0A     \n@@ -2315,32 +2315,99 @@\n          return%0A\n+        # S%C3%B3 carregador ou bateria carregada: apenas acumula tempo%0A\n         self.__t\n@@ -2816,32 +2816,32 @@\n rregador = None%0A\n-\n         print(f%22\n@@ -2854,32 +2854,110 @@\n do %7Bremovido%7D%22)%0A\n+        # Verifica se o notebook deve ser desligado ap%C3%B3s remover o carregador%0A\n         if self.\n",
            "lines": "154"
        },
        {
            "label": "2025-10-28_04-09-09",
            "content": "@@ -2125,38 +2125,40 @@\n print(%22fail: des\n-ligado\n+carregou\n %22)%0A             \n",
            "lines": "149"
        },
        {
            "label": "2025-10-28_04-09-37",
            "content": "@@ -2137,16 +2137,14 @@\n  des\n-carregou\n+ligado\n %22)%0A \n",
            "lines": "149"
        },
        {
            "label": "2025-10-28_04-09-58",
            "content": "@@ -1997,32 +1997,30 @@\n t(%22fail: des\n-carregou\n+ligado\n %22)%0A         \n",
            "lines": "149"
        },
        {
            "label": "2025-10-28_04-10-13",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\n    def getCapacidade(self) -> int:\n        return self.__capacidade\n\n    def getCarga(self) -> int:\n        return self.__carga\n\n    def setCarga(self, carga: int):\n        self.__carga = max(0, min(carga, self.__capacidade))\n\n    def __str__(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia: int = potencia\n\n    def getPotencia(self) -> int:\n        return self.__potencia\n\n    def __str__(self):\n        return f\"{self.__potencia}W\"\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__tempo_uso: int = 0\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def turn_on(self):\n        if self.__ligado:\n            return\n        if (self.__bateria is None or self.__bateria.getCarga() <= 0) and self.__carregador is None:\n            print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n            return\n        self.__ligado = True\n\n    def turn_off(self):\n        if not self.__ligado:\n            return\n        self.__ligado = False\n\n    def use(self, tempo: int):\n        if not self.__ligado:\n            print(\"fail: desligado\")\n            return\n        if self.__bateria is not None and self.__carregador is not None:\n            carga_adicionada = tempo * self.__carregador.getPotencia()\n            self.__bateria.setCarga(self.__bateria.getCarga() + carga_adicionada)\n        elif self.__bateria is not None:\n            carga_atual = self.__bateria.getCarga()\n            if carga_atual <= 0:\n                print(\"fail: desligado\")\n                self.turn_off()\n                return\n            tempo_usado = min(tempo, carga_atual)\n            self.__bateria.setCarga(carga_atual - tempo_usado)\n            if self.__bateria.getCarga() == 0:\n                print(\"fail: descarregou\")\n                self.turn_off()\n                return\n            if tempo_usado < tempo:\n                print(\"fail: descarregou\")\n                self.turn_off()\n                return\n        self.__tempo_uso += tempo\n\n    def set_charger(self, potencia: int):\n        if self.__carregador is not None:\n            print(\"fail: carregador j\u00e1 conectado\")\n            return\n        self.__carregador = Carregador(potencia)\n\n    def rm_charger(self):\n        if self.__carregador is None:\n            print(\"fail: Sem carregador\")\n            return\n        removido = self.__carregador\n        self.__carregador = None\n        print(f\"Removido {removido}\")\n        if self.__ligado and (self.__bateria is None or self.__bateria.getCarga() <= 0):\n            self.turn_off()\n\n    def set_battery(self, capacidade: int):\n        if self.__bateria is not None:\n            print(\"fail: bateria j\u00e1 instalada\")\n            return\n        self.__bateria = Bateria(capacidade)\n\n    def rm_battery(self):\n        if self.__bateria is None:\n            print(\"fail: Sem bateria\")\n            return\n        removido = self.__bateria\n        self.__bateria = None\n        print(f\"Removido {removido}\")\n        # Verifica se o notebook deve ser desligado ap\u00f3s remover a bateria\n        if self.__ligado and self.__carregador is None:\n            self.turn_off()\n\n    def show(self):\n        status = \"ligado\" if self.__ligado else \"desligado\"\n        if self.__ligado:\n            partes = [f\"Notebook: {status} por {self.__tempo_uso} min\"]\n        else:\n            partes = [f\"Notebook: {status}\"]\n        if self.__carregador is not None:\n            partes.append(f\"Carregador {self.__carregador}\")\n        if self.__bateria is not None:\n            partes.append(f\"Bateria {self.__bateria}\")\n        print(\", \".join(partes))\n\ndef main():\n    notebook = Notebook()\n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            notebook.show()\n        elif args[0] == \"turn_on\":\n            notebook.turn_on()\n        elif args[0] == \"turn_off\":\n            notebook.turn_off()\n        elif args[0] == \"use\":\n            tempo = int(args[1])\n            notebook.use(tempo)\n        elif args[0] == \"set_charger\":\n            potencia = int(args[1])\n            notebook.set_charger(potencia)\n        elif args[0] == \"rm_charger\":\n            notebook.rm_charger()\n        elif args[0] == \"set_battery\":\n            capacidade = int(args[1])\n            notebook.set_battery(capacidade)\n        elif args[0] == \"rm_battery\":\n            notebook.rm_battery()\n\nmain()\n\n",
            "lines": "149"
        }
    ]
}