{
    "patches": [
        {
            "label": "2025-10-27_01-42-01",
            "content": "class Passageiro:\n    def _init_(self, nome: str, age: int):\n        self.__nome = nome\n        self.__age = age\n\n    def _str_(self):\n        return f\"{self._nome}:{self._age}\"\n        \n    def getAge(self):\n        return self.__age\n\n    def getName(self):\n        return self.__nome\n\n    def toString(self) -> str:\n        return f\"{self._nome}:{self._age}\"\n\n\nclass Moto:\n    def _init_(self, potencia: int = 1):\n        self.__potencia = potencia\n        self.__tempo: int = 0\n        self.__pessoa: Passageiro = None \n\n    def add_pessoa(self, pessoa: Pessoa) -> bool:\n        if self.__pessoa != None:\n            print(\"fail: busy motorcycle\")\n            return False\n        self.__pessoa = pessoa\n        return True\n\n    def remover(self) -> Pessoa | None:        \n        aux = self.__pessoa\n        self.__pessoa = None       \n        return aux          \n\n    def comprar_tempo(self, tempo: int):\n        self.__tempo += tempo\n\n    def dirigir(self, tempo: int):\n        if self.__tempo == 0:\n            print(\"fail: buy time first\")\n            return \n\n        elif self.__pessoa == None:\n            print(\"fail: empty motorcycle\")\n\n        elif self.__tempo == 0:\n            print(\"fail: buy time first\")\n            return \n\n        elif self.__pessoa.getAge() > 10:\n            print(\"fail: too old to drive\")\n\n        elif self.__tempo < tempo:\n            print(f\"fail: time finished after {self.__tempo} minutes\")\n            self.__tempo = 0\n\n        elif self.__tempo >= tempo:\n             self.__tempo -= tempo\n\n    def buzinar(self) -> str:           \n        som: str = \"P\"                   \n        for i in range(self.__potencia): \n            som += \"e\"\n        som += \"m\"\n        return som\n\n    def _str_(self):\n        pessoa = \"empty\" if self._pessoa is None else str(self._pessoa)\n        return f\"power:{self._potencia}, time:{self._tempo}, person:({pessoa})\"\n \n\n",
            "lines": "73"
        }
    ]
}